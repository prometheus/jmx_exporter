string projectName = "prometheus-integrations"

pipeline {
    agent {
        label 'qa_terminating_j8'
    }

    options {
        disableConcurrentBuilds()
    }

    environment {
        registryCredential = 'jenkins-artifactory'
        ARTIFACTORY_URL = 'docker.internal.sysdig.com'
        EXPORTER = 'jmx-exporter'
    }

    stages {
        stage('Pull image from artifactory') {
            steps {
                script {
                    docker.withRegistry("https://${env.ARTIFACTORY_URL}",  registryCredential) {            
                        sh """export VERSION=$(docker inspect --format '{{ index .Config.Labels "version" }}' artifactory.internal.sysdig.com/jmx-exporterjmx-exporter:latest)"""          
                        sh """docker pull ${env.ARTIFACTORY_URL}/${env.EXPORTER}:${env.VERSION}"""
                        sh """docker pull ${env.ARTIFACTORY_URL}/${env.EXPORTER}:${env.VERSION}-ubi"""
                    }
                }
            }
        }
        stage('Push image to Quay'){
            steps {
                script {
                    docker.withRegistry("https://quay.io", "QUAY") {
                        sh """docker tag ${env.ARTIFACTORY_URL}/${env.EXPORTER}:${env.VERSION} quay.io/sysdig/promcat-${env.EXPORTER}:${env.VERSION}"""
                        sh """docker tag ${env.ARTIFACTORY_URL}/${env.EXPORTER}:${env.VERSION} quay.io/sysdig/promcat-${env.EXPORTER}:latest"""
                        sh """docker tag ${env.ARTIFACTORY_URL}/${env.EXPORTER}:${env.VERSION}-ubi quay.io/sysdig/promcat-${env.EXPORTER}:${env.VERSION}-ubi"""
                        sh """docker push quay.io/sysdig/promcat-${env.EXPORTER}:${env.VERSION}"""
                        sh """docker push quay.io/sysdig/promcat-${env.EXPORTER}:latest"""
                        sh """docker push quay.io/sysdig/promcat-${env.EXPORTER}:${env.VERSION}-ubi"""
                    }
                }
            }
        }
    } //stages
    post {
    always {
        sh "docker rmi -f ${env.ARTIFACTORY_URL}/${env.EXPORTER}:${env.VERSION}"
        sh "docker rmi -f ${env.ARTIFACTORY_URL}/${env.EXPORTER}:${env.VERSION}-ubi"
        sh "docker images -q -f 'dangling=true' | xargs --no-run-if-empty docker rmi -f"
        cleanWs deleteDirs: true, notFailBuild: true
    }
  } //post
}